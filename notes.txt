================================= ISSUES =====================================
                  ============ HOME COMPONENT =============
- Issue: When I have to click twice to show the add-question-form instead of once.




================================= REFLEXION =====================================

/*======================= Project Organisation ======================*/
- For nexts projects, start by the back-end, design the api, create the dataBase
- When comes in the UI, test the api before starting coding the UI.
- Sometimes, it is I have to manipulate the DOM to achive some result(conf selectedQuestion() in the quizComponennt)

/*========Modify DOM elements in a loop ==> select that element in the DOM =========*/
- When I have to modify a specific elements in a loop, I add an unique id to that element
and select it in the DOM.

/*========Type issues ==> interface =========*/
- When I create an array of something, typeScript doesn't know type of it elements. So when I would like to access
it elements value (for example with object), it will to lead to an error.
To fix the issue, we have to use interface, help us to specify the type.

/*========Function in template ==> OnInit() =========*/
- DO not put, function inside template, instead, put static array.
So we can solve this issue initializing an array onInit()

================================= TODO =====================================
- Work on edit quiz, make it functionnal (Done)
- Make more reseach one ReactiveForm, FormArray, FormGroup, FormControl (Done)
- There is a big problem on edit-question page, related to my understanding of Angular Reactive forms (Done)

- Work on services: group common method in each component and put them in a service
- Design the database
????

** About service **
- Create interface to received quiz form
- 


FormGroup: static, FormArray: Dynamic
FormArrayName, FormGroupName are very important, il missing, it will not work.

/*=========================================HOSTING THE PROJECT ON GITHUB =================================*/

1. ng add angular-cli-ghpages | npm install -g angular-cli-ghpages
2. ng build --base-href "https://github.com/gangueboris/AnimeQuiz"
3. On github, move to the repository of the project ==> settings ==> Pages and change Branch to master
4. Publish the project: npx angular-cli-ghpages --dir=dist/anime-quiz/browser
5. On github, change the master to gh-Pages
6. Publish again : (run the line 4)

/*== After change on the project and want to publish ===*/
1. ng build --base-href "https://github.com/gangueboris/AnimeQuiz"
2. npx angular-cli-ghpages --dir=dist/anime-quiz/browser | ng deploy --base-href "/AnimeQuiz/"

command to change branch: git checkout master   | git checkout gh-pages